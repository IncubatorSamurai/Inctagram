import { getPublicData, getPublicPosts } from '@/shared/utils'
import { Profile } from '@/entities/profile/ui/Profile'
import { getMeData } from '@/shared/utils/getMeData'
import { getPrivateData } from '@/shared/utils/getPrivateData'

type Props = {
  params: Promise<{ userId: string }>
}

export default async function ProfilePage({ params }: Props) {
  const userId = (await params).userId

  let isLoggedIn = false
  let me = null

  try {
    me = await getMeData()

    // üí° –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ª–æ–≥–∏–Ω–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ –Ω–∞–ª–∏—á–∏—é id)
    if (me && me.id) {
      isLoggedIn = true
    }
  } catch (error) {
    // –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    console.log(error)
    isLoggedIn = false
  }

  let resPublicData = null
  let resPublicPosts = null

  if (!isLoggedIn) {
    ;[resPublicData, resPublicPosts] = await Promise.all([
      getPublicData(userId),
      getPublicPosts(userId),
    ])
  } else {
    // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ª–æ–≥–∏–Ω–µ–Ω, –ø–æ–ª—É—á–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å `me.id` –∏–ª–∏ —Ç–æ–∫–µ–Ω)
    ;[resPublicData, resPublicPosts] = await Promise.all([
      getPrivateData(userId),
      getPublicPosts(userId),
    ])
  }
  return <Profile resPublicData={resPublicData} resPublicPosts={resPublicPosts} />
}
